#include "archdep.h"

        .word $1000
        * = $1000

        ; Character Set: $0800-$0bff

        .byt $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff    ; char $00
        .byt $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
        .byt $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
        .byt $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
        .byt $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
        .byt $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
        .byt $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff
        .byt $00,$c0,$f0,$fc,$fc,$f0,$c0,$00,$00,$c0,$f0,$fc,$fc,$f0,$c0,$00

        .byt $07,$1f,$3f,$7f,$7f,$ff,$ff,$ff,$03,$07,$0f,$1f,$3f,$7f,$ff,$ff    ; char $10
        .byt $e0,$f8,$fc,$fe,$fe,$ff,$ff,$ff,$c0,$e0,$f0,$f8,$fc,$fe,$ff,$ff
        .byt $ff,$7f,$3f,$1f,$0f,$07,$03,$00,$ff,$7f,$3f,$1f,$0f,$07,$03,$00
        .byt $ff,$fe,$fc,$f8,$f0,$e0,$c0,$00,$ff,$fe,$fc,$f8,$f0,$e0,$c0,$00
        .byt $00,$03,$0f,$3f,$3f,$0f,$03,$00,$00,$03,$0f,$3f,$3f,$0f,$03,$00
        .byt $18,$3c,$7e,$18,$18,$7e,$3c,$18,$00,$00,$38,$7c,$7c,$38,$00,$00
        .byt $18,$3c,$7e,$18,$18,$18,$18,$18,$18,$18,$18,$18,$18,$7e,$3c,$18
        .byt $00,$10,$38,$54,$92,$28,$28,$28,$ff,$bb,$ff,$ff,$ff,$ff,$bb,$ff

        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$18,$18,$18,$18,$00,$18,$18    ; char $20
        .byt $00,$36,$36,$6c,$00,$00,$00,$00,$00,$6c,$fe,$6c,$6c,$fe,$6c,$00
        .byt $00,$10,$3c,$70,$38,$1c,$78,$10,$00,$00,$66,$6c,$18,$36,$66,$00
        .byt $00,$70,$d8,$d8,$76,$dc,$dc,$76,$00,$18,$18,$30,$00,$00,$00,$00
        .byt $00,$0c,$18,$30,$30,$30,$18,$0c,$00,$60,$30,$18,$18,$18,$30,$60
        .byt $00,$00,$10,$38,$7c,$38,$10,$00,$00,$00,$18,$18,$7e,$18,$18,$00
        .byt $00,$00,$00,$00,$00,$18,$18,$30,$00,$00,$00,$00,$7c,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$18,$18,$00,$10,$7c,$ba,$92,$38,$28,$28

        .byt $00,$38,$6c,$6c,$6c,$6c,$6c,$38,$00,$08,$18,$38,$18,$18,$18,$3c    ; 0,1
        .byt $00,$38,$6c,$0c,$18,$30,$60,$7c,$00,$38,$6c,$0c,$38,$0c,$6c,$38    ; 2,3
        .byt $00,$6c,$6c,$6c,$7c,$0c,$0c,$0c,$00,$7c,$60,$78,$0c,$0c,$6c,$38    ; 4,5
        .byt $00,$0c,$18,$30,$78,$6c,$6c,$38,$00,$7c,$0c,$0c,$18,$30,$30,$30    ; 6,7
        .byt $00,$38,$6c,$6c,$38,$6c,$6c,$38,$00,$38,$6c,$6c,$3c,$18,$30,$60    ; 8,9
        .byt $00,$00,$18,$18,$00,$18,$18,$00,$00,$00,$18,$18,$00,$18,$18,$08    ; :,;
        .byt $30,$00,$03,$00,$60,$00,$06,$00,$00,$00,$00,$7c,$00,$7c,$00,$00    ;  ,=
        .byt $00,$60,$30,$18,$0c,$18,$30,$60,$00,$38,$6c,$0c,$18,$00,$18,$18    ; >,?

        .byt $fe,$fe,$fe,$fe,$fe,$fe,$fe,$fe,$00,$0e,$1e,$36,$36,$3e,$36,$66    ;  ,A
        .byt $00,$7c,$36,$36,$3c,$36,$36,$7c,$00,$1c,$36,$60,$60,$60,$66,$3c    ; B,C
        .byt $00,$7c,$36,$36,$36,$36,$36,$7c,$00,$7e,$30,$30,$3c,$30,$30,$7e    ; D,E
        .byt $00,$3e,$30,$30,$3c,$30,$30,$60,$00,$1c,$36,$60,$60,$6e,$66,$3c    ; F,G
        .byt $00,$66,$66,$66,$7e,$66,$66,$66,$00,$7e,$18,$18,$18,$18,$18,$7e    ; H,I
        .byt $00,$3e,$06,$06,$06,$66,$66,$3c,$00,$66,$6c,$78,$70,$78,$6c,$66    ; J,K
        .byt $00,$30,$30,$30,$30,$30,$38,$6e,$00,$42,$66,$7e,$7e,$66,$66,$66    ; L,M
        .byt $00,$46,$66,$76,$7e,$6e,$66,$62,$00,$3c,$66,$66,$66,$66,$66,$3c    ; N,O

        .byt $00,$7c,$66,$66,$7c,$60,$60,$70,$00,$3c,$66,$66,$66,$66,$6c,$36    ; P,Q
        .byt $00,$7c,$66,$66,$7c,$6c,$66,$66,$00,$1c,$36,$60,$3c,$06,$66,$3c    ; R,S
        .byt $00,$7e,$18,$18,$18,$18,$18,$18,$00,$66,$66,$66,$66,$66,$66,$3c    ; T,U
        .byt $00,$66,$66,$66,$66,$66,$3c,$18,$00,$66,$66,$66,$66,$7e,$66,$42    ; V,W
        .byt $00,$66,$66,$3c,$18,$3c,$66,$66,$00,$66,$66,$66,$3c,$18,$18,$18    ; X,Y
        .byt $00,$7e,$06,$0c,$7e,$30,$60,$7e,$00,$66,$66,$7e,$7e,$66,$66,$00    ; Z,
        .byt $00,$00,$54,$38,$10,$10,$28,$44,$00,$18,$18,$7e,$7e,$18,$18,$00
        .byt $00,$00,$10,$38,$6c,$00,$00,$00,$00,$00,$10,$38,$54,$10,$28,$28

        .byt $00,$00,$00,$7c,$7c,$38,$7c,$00,$00,$00,$00,$3c,$6c,$6c,$6c,$36    ;  ,a
        .byt $00,$30,$30,$3c,$36,$36,$36,$6c,$00,$00,$00,$3c,$66,$60,$66,$3c    ; b,c
        .byt $00,$0c,$0c,$3c,$6c,$6c,$6c,$36,$00,$00,$00,$3c,$66,$7e,$60,$3e    ; d,e
        .byt $00,$1c,$36,$30,$7e,$30,$30,$60,$00,$00,$00,$3c,$66,$3e,$06,$7c    ; f,g
        .byt $00,$60,$60,$60,$78,$6c,$6c,$66,$00,$00,$18,$00,$18,$18,$18,$3c    ; h,i
        .byt $00,$0c,$00,$0c,$0c,$6c,$6c,$38,$00,$60,$60,$66,$6c,$78,$6c,$66    ; j,k
        .byt $00,$38,$18,$18,$18,$18,$18,$3c,$00,$00,$00,$42,$66,$7e,$66,$66    ; l,m
        .byt $00,$00,$00,$6c,$76,$66,$66,$66,$00,$00,$00,$3c,$66,$66,$66,$3c    ; n,o

        .byt $00,$00,$00,$7c,$66,$7c,$60,$70,$00,$00,$00,$3e,$66,$3c,$0c,$06    ; p,q
        .byt $00,$00,$00,$6c,$76,$60,$60,$60,$00,$00,$00,$3c,$60,$3c,$06,$7c    ; r,s
        .byt $00,$30,$30,$7c,$30,$30,$36,$1c,$00,$00,$00,$6c,$6c,$6c,$6c,$36    ; t,u
        .byt $00,$00,$00,$66,$66,$66,$3c,$18,$00,$00,$00,$66,$66,$7e,$66,$42    ; v,w
        .byt $00,$00,$00,$66,$3c,$18,$3c,$66,$00,$00,$00,$66,$66,$3e,$0c,$38    ; x,y
        .byt $00,$00,$00,$7e,$0c,$18,$30,$7e,$00,$00,$10,$7c,$10,$38,$28,$28    ; z,
        .byt $6c,$3c,$38,$66,$66,$38,$3c,$6c,$3c,$38,$66,$6c,$6c,$66,$38,$3c
        .byt $38,$66,$6c,$3c,$3c,$6c,$66,$38,$66,$6c,$3c,$38,$38,$3c,$6c,$66

; $1400
        lda #$00
        sta TedScreenCtrlReg1   ; turn screen off
        ldx #>bitmapRAM0
        stx zpTmpPtr+1
        lda #$00
        tay                     ; bitmap index
        sta zpTmpPtr
        ldx #$40                ; clear $4000 bytes
_clearMemoryL1
        sta (zpTmpPtr),y        ; clear memory $2000-$5fff
        iny
        bne _clearMemoryL1
        inc zpTmpPtr+1
        dex
        bne _clearMemoryL1

        lda #$08                ; copy 8*8 rows of bitmap data
        sta zpTmpCtr
        lda #<bitmapRAM1 + (5*40+4)*8
        sta _bmpLogoDstPtr
        lda #>bitmapRAM1 + (5*40+4)*8
        sta _bmpLogoDstPtr+1
        lda #<_bitmapOriginLogo ; bitmap data: Origin logo
        sta _bmpLogoSrcPtr
        lda #>_bitmapOriginLogo
        sta _bmpLogoSrcPtr+1
_copyOriginLogoL1
lc32    ldx #$02                ; repeat for $118 = 280 bytes (width of apple bitmap)
        ldy #$18
_copyOriginLogoL2
_bmpLogoSrcPtr = * + 1
        lda _bitmapOriginLogo   ; read bitmap data
_bmpLogoDstPtr = * + 1
        sta bitmapRAM0 + 4*40*8 ; store it in logo bitmap buffer
        inc _bmpLogoSrcPtr      ; inc src ptr
        bne _copyOriginLogoJ1
        inc _bmpLogoSrcPtr+1
_copyOriginLogoJ1
        inc _bmpLogoDstPtr      ; inc dst ptr
        bne _copyOriginLogoJ2
        inc _bmpLogoDstPtr+1
_copyOriginLogoJ2
        dey
        bne _copyOriginLogoL2
        dex
        bne _copyOriginLogoL2

        lda _bmpLogoDstPtr
        clc
        adc #40                 ; skip 40 bytes (C64: 320 px, Apple: 280 px)
        sta _bmpLogoDstPtr
        lda _bmpLogoDstPtr+1
        adc #$00
        sta _bmpLogoDstPtr+1
        dec zpTmpCtr
        bne _copyOriginLogoL1

        ldx #$00
        lda #(COL_LIGHTBLUE & 15) * 16 + (COL_BLACK & 15)
_setColorL1
        sta screenRAM0,x
        sta screenRAM0+$0100,x
        sta screenRAM0+$0200,x
        sta screenRAM0+$02f0,x
        inx
        bne _setColorL1

        lda #(COL_LIGHTBLUE >> 4) + (COL_BLACK >> 4) * 16
_setColorL2
        sta colorRAM0,x
        sta colorRAM0+$0100,x
        sta colorRAM0+$0200,x
        sta colorRAM0+$02f0,x
        inx
        bne _setColorL2

        lda #COL_BLACK
        sta TedBorderColor
        lda #$3b                ; vscroll 3, 25 rows, screen on, bitmap mode, raster line $0xx
        sta TedScreenCtrlReg1
        lda #$08                ; reverse mode on, MC mode off, screen width: 40 column, horz scroll = 0
        sta TedScreenCtrlReg2
        lda #$08                ; bitmap at $2000
        sta TedMemCtrl1

        jsr _fadeInOriginLogo
        ldx #$05
        jsr loadSpecial         ; load "OU",$e000
        ldx #$0c
        jsr $c480               ; load "IN",$6800 (intro?)
        jmp $6800


lc9e
_bitmapOriginLogo
                                ; Bitmap Data: ORIGIN Logo
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00    ; line 0
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$06,$06,$0c,$0c,$18,$18
        .byt $ff,$00,$00,$00,$00,$00,$01,$01,$ff,$20,$60,$60,$c0,$c0,$80,$80
        .byt $ff,$02,$06,$06,$0c,$0c,$18,$18,$ff,$00,$00,$01,$03,$07,$0f,$1f
        .byt $ff,$78,$f8,$f8,$f8,$f8,$f8,$f8,$ff,$02,$06,$06,$0c,$0c,$18,$18
        .byt $ff,$00,$00,$00,$00,$00,$01,$01,$ff,$20,$60,$60,$c0,$c0,$80,$80
        .byt $ff,$02,$06,$06,$0c,$0c,$18,$18,$ff,$00,$00,$00,$00,$03,$0f,$1f
        .byt $ff,$00,$00,$00,$ff,$ff,$ff,$00,$ff,$00,$00,$00,$ff,$ff,$ff,$00
        .byt $ff,$00,$00,$00,$c0,$e0,$f0,$78,$ff,$00,$00,$00,$00,$00,$03,$07
        .byt $ff,$00,$00,$00,$3f,$ff,$ff,$80,$ff,$00,$00,$00,$ff,$ff,$ff,$00
        .byt $ff,$00,$00,$00,$f0,$f8,$fe,$0e,$ff,$00,$00,$00,$00,$00,$00,$00
        .byt $ff,$00,$00,$00,$78,$78,$f0,$f0,$ff,$00,$00,$00,$00,$01,$03,$07
        .byt $ff,$00,$00,$00,$ff,$ff,$ff,$c0,$ff,$00,$00,$00,$ff,$ff,$ff,$00
        .byt $ff,$00,$00,$00,$e0,$f8,$fe,$1e,$ff,$00,$00,$00,$00,$00,$00,$00
        .byt $ff,$00,$00,$00,$78,$78,$f0,$f0,$ff,$00,$00,$00,$00,$03,$03,$07
        .byt $ff,$00,$00,$00,$00,$80,$80,$c0,$ff,$00,$00,$00,$00,$00,$00,$00
        .byt $ff,$00,$00,$00,$00,$3c,$3c,$78,$ff,$00,$01,$01,$03,$03,$06,$06

        .byt $c0,$c0,$80,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00    ; line 1
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01
        .byt $30,$30,$7f,$60,$c0,$c0,$80,$80,$03,$03,$ff,$06,$0c,$0c,$18,$18
        .byt $00,$00,$ff,$00,$00,$00,$01,$01,$30,$30,$ff,$60,$c0,$c0,$80,$80
        .byt $3f,$7f,$ff,$0f,$0f,$1e,$1e,$3c,$f8,$f8,$ff,$00,$00,$00,$01,$01
        .byt $30,$30,$ff,$60,$c0,$c0,$80,$80,$03,$03,$ff,$06,$0c,$0c,$18,$18
        .byt $00,$00,$ff,$00,$00,$00,$01,$01,$30,$30,$e0,$60,$c0,$c0,$80,$81
        .byt $1e,$3c,$3c,$78,$78,$f0,$f0,$e0,$00,$00,$00,$00,$00,$00,$00,$00
        .byt $00,$00,$00,$01,$01,$03,$03,$07,$78,$f0,$f0,$e0,$e0,$c0,$c0,$80
        .byt $07,$0f,$0f,$1e,$1e,$3c,$3c,$78,$80,$00,$00,$00,$00,$00,$00,$03
        .byt $00,$00,$00,$00,$00,$00,$0f,$ff,$1e,$1e,$3c,$3c,$38,$f8,$e0,$80
        .byt $01,$01,$03,$03,$07,$07,$0f,$0f,$e0,$e0,$c0,$c0,$80,$80,$00,$00
        .byt $07,$0f,$0f,$1e,$1e,$3c,$3c,$78,$c0,$00,$00,$00,$00,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$1e,$3c,$3c,$78,$78,$00,$00,$00
        .byt $01,$01,$03,$03,$07,$07,$0f,$0f,$e0,$e0,$c0,$c0,$80,$80,$00,$00
        .byt $07,$0f,$0f,$1f,$1f,$3c,$3c,$78,$c0,$e0,$e0,$f0,$f0,$78,$78,$3c
        .byt $00,$00,$00,$01,$01,$03,$03,$07,$78,$f0,$f0,$e0,$e0,$c0,$c0,$80
        .byt $0c,$0c,$18,$18,$30,$30,$60,$60,$00,$00,$00,$00,$00,$00,$00,$00

        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00    ; line 2
        .byt $03,$03,$06,$06,$0f,$0c,$18,$18,$00,$00,$00,$00,$ff,$00,$01,$03
        .byt $30,$30,$60,$60,$ff,$c0,$80,$80,$03,$03,$06,$06,$ff,$0c,$18,$18
        .byt $00,$00,$00,$00,$ff,$01,$01,$03,$3c,$78,$78,$f0,$ff,$e0,$e0,$c0
        .byt $03,$03,$06,$06,$ff,$0c,$18,$18,$00,$00,$00,$00,$ff,$00,$01,$01
        .byt $30,$30,$60,$60,$ff,$c0,$c0,$c0,$03,$03,$06,$06,$fc,$0c,$18,$18
        .byt $01,$03,$03,$07,$07,$0f,$0f,$1e,$e0,$c0,$c0,$80,$80,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$07,$0f,$0f,$1e,$1e,$3c,$3c,$78
        .byt $80,$00,$00,$01,$01,$03,$03,$07,$78,$f0,$e0,$e0,$e0,$c0,$c0,$80
        .byt $0f,$1f,$1e,$0e,$0f,$07,$03,$01,$f8,$80,$00,$00,$80,$80,$e0,$f0
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$1e,$1e,$3c,$3c,$78,$78,$f0,$f0
        .byt $00,$00,$00,$01,$01,$03,$03,$07,$78,$f0,$f0,$e0,$e0,$c0,$c0,$80
        .byt $00,$03,$03,$03,$00,$00,$00,$00,$00,$ff,$ff,$ff,$0f,$0f,$0f,$0f
        .byt $00,$c0,$c0,$c0,$80,$80,$00,$00,$1e,$1e,$3c,$3c,$78,$78,$f0,$f0
        .byt $00,$00,$00,$01,$01,$03,$03,$07,$78,$f0,$f0,$e0,$e0,$c0,$c0,$80
        .byt $3c,$1e,$1e,$0f,$0f,$07,$07,$03,$07,$0f,$0f,$1e,$1e,$bc,$bc,$f8
        .byt $80,$00,$01,$01,$03,$03,$06,$06,$c0,$c0,$80,$80,$00,$00,$00,$00

        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00    ; line 3
        .byt $00,$00,$00,$00,$00,$00,$00,$01,$30,$30,$60,$63,$8f,$3f,$ff,$ff
        .byt $0f,$3f,$fe,$fe,$fc,$ff,$ff,$ff,$00,$00,$00,$00,$00,$ff,$ff,$ff
        .byt $30,$30,$60,$60,$c0,$ff,$ff,$ff,$03,$07,$07,$0f,$0f,$ff,$ff,$ff
        .byt $c0,$80,$80,$00,$00,$ff,$ff,$ff,$30,$30,$60,$60,$c0,$ff,$ff,$ff
        .byt $03,$03,$07,$07,$0f,$ff,$ff,$ff,$e0,$f0,$f8,$fc,$fe,$ff,$ff,$ff
        .byt $30,$30,$60,$60,$40,$00,$80,$00,$1e,$3c,$3c,$1f,$0f,$07,$00,$00
        .byt $00,$00,$00,$ff,$ff,$ff,$00,$00,$00,$00,$01,$ff,$ff,$fe,$00,$00
        .byt $78,$f0,$f0,$e0,$80,$00,$00,$00,$07,$0f,$0f,$1e,$1e,$1e,$00,$00
        .byt $80,$00,$00,$00,$00,$00,$00,$00,$01,$00,$00,$00,$00,$00,$00,$00
        .byt $f0,$f8,$78,$78,$38,$38,$00,$00,$01,$01,$03,$03,$07,$07,$00,$00
        .byt $e0,$e0,$c0,$c0,$80,$80,$00,$00,$07,$0f,$0f,$0f,$03,$00,$00,$00
        .byt $80,$00,$00,$ff,$ff,$ff,$00,$00,$00,$00,$00,$ff,$ff,$ff,$00,$00
        .byt $0e,$3c,$78,$f0,$e0,$c0,$00,$00,$01,$01,$03,$03,$07,$07,$00,$00
        .byt $e0,$e0,$c0,$c0,$80,$80,$00,$00,$07,$0f,$0f,$1e,$1e,$1e,$00,$00
        .byt $80,$00,$00,$00,$00,$00,$00,$00,$03,$01,$01,$00,$00,$00,$00,$00
        .byt $f8,$f0,$f0,$e0,$e0,$e0,$00,$00,$0c,$0c,$18,$18,$30,$30,$60,$60
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

        .byt $00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$06,$06,$0c,$0c,$18,$18    ; line 4
        .byt $ff,$3f,$0f,$03,$00,$00,$01,$01,$f0,$f0,$e0,$e0,$c0,$c0,$80,$80
        .byt $03,$03,$06,$06,$0c,$0c,$18,$18,$00,$00,$00,$00,$00,$01,$01,$03
        .byt $3c,$78,$78,$f0,$f0,$e0,$e0,$c0,$03,$03,$06,$06,$0c,$0c,$18,$18
        .byt $00,$00,$00,$00,$00,$00,$01,$01,$7f,$7f,$7f,$7e,$f8,$e0,$c0,$80
        .byt $f8,$e2,$86,$06,$0c,$0c,$18,$18,$00,$00,$00,$00,$00,$00,$03,$0f
        .byt $00,$00,$00,$00,$00,$00,$f8,$f8,$00,$00,$00,$00,$00,$00,$38,$38
        .byt $00,$00,$00,$00,$00,$00,$38,$38,$00,$00,$00,$00,$00,$00,$0f,$3f
        .byt $00,$00,$00,$00,$00,$00,$e0,$e0,$00,$00,$00,$00,$00,$00,$ff,$ff
        .byt $00,$00,$00,$00,$00,$00,$f0,$f0,$00,$00,$00,$00,$00,$00,$ff,$ff
        .byt $00,$00,$00,$00,$00,$00,$c3,$c3,$00,$00,$00,$00,$00,$00,$80,$80
        .byt $00,$00,$00,$00,$00,$00,$3c,$7c,$00,$00,$00,$00,$00,$00,$0f,$3f
        .byt $00,$00,$00,$00,$00,$00,$e0,$e0,$00,$00,$00,$00,$00,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$f0,$f0,$00,$00,$00,$00,$00,$00,$e3,$e3
        .byt $00,$00,$00,$00,$00,$00,$80,$83,$00,$00,$00,$00,$00,$00,$f8,$f8
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$03,$03,$06,$06
        .byt $c0,$c0,$80,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01    ; line 5
        .byt $3f,$30,$60,$60,$c0,$c0,$80,$80,$ff,$03,$06,$06,$0c,$0c,$18,$18
        .byt $ff,$00,$00,$00,$00,$00,$01,$01,$ff,$30,$60,$60,$c0,$c0,$80,$80
        .byt $ff,$07,$07,$0f,$0f,$1e,$1e,$3c,$ff,$80,$80,$00,$00,$00,$01,$01
        .byt $ff,$30,$60,$60,$c0,$c0,$80,$80,$ff,$03,$06,$06,$0c,$0c,$18,$18
        .byt $ff,$00,$00,$00,$00,$00,$01,$01,$f0,$30,$60,$60,$c0,$c0,$80,$80
        .byt $1e,$38,$38,$3e,$0f,$07,$03,$00,$00,$00,$00,$00,$80,$c0,$e0,$e0
        .byt $70,$70,$e0,$e0,$ff,$ff,$1e,$1e,$70,$70,$e0,$e0,$c0,$c0,$00,$00
        .byt $78,$f0,$e0,$f8,$3e,$1f,$0f,$07,$00,$00,$00,$00,$00,$00,$80,$80
        .byt $0f,$0f,$1e,$1e,$3c,$3c,$78,$78,$01,$01,$03,$03,$07,$07,$0f,$0f
        .byt $e0,$e0,$c0,$c0,$fe,$fe,$00,$00,$03,$07,$07,$0f,$0f,$1e,$1e,$3c
        .byt $e0,$e3,$ff,$7e,$78,$01,$01,$03,$fc,$f8,$f8,$f0,$f0,$e0,$e0,$c0
        .byt $38,$f0,$e0,$f8,$3e,$0f,$0f,$07,$00,$00,$00,$00,$00,$00,$80,$80
        .byt $01,$01,$03,$03,$07,$07,$0f,$0f,$e1,$e1,$c3,$c3,$83,$87,$07,$0f
        .byt $f3,$f3,$fb,$fb,$ff,$be,$be,$3c,$83,$87,$07,$0e,$0e,$1c,$1c,$38
        .byt $80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        .byt $0c,$0c,$18,$18,$30,$30,$60,$60,$00,$00,$00,$00,$00,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

        .byt $03,$03,$07,$06,$0c,$0c,$18,$18,$00,$00,$ff,$00,$00,$00,$01,$01    ; line 6
        .byt $30,$30,$ff,$60,$c0,$c0,$80,$80,$03,$03,$ff,$06,$0c,$0c,$18,$18
        .byt $00,$00,$ff,$1f,$1f,$1f,$1f,$1f,$3c,$78,$ff,$fe,$fc,$f8,$f0,$e0
        .byt $03,$03,$ff,$06,$0c,$0c,$18,$18,$00,$00,$ff,$00,$00,$00,$01,$01
        .byt $30,$30,$ff,$60,$c0,$c0,$80,$80,$03,$03,$fe,$06,$0c,$0c,$18,$18
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$ff,$fe,$00,$00,$00,$00
        .byt $e0,$c0,$80,$00,$00,$00,$00,$00,$3c,$3c,$78,$78,$00,$00,$00,$00
        .byt $00,$00,$03,$03,$00,$00,$00,$00,$03,$0f,$fe,$f8,$00,$00,$00,$00
        .byt $80,$00,$01,$01,$00,$00,$00,$00,$f0,$f0,$e0,$e0,$00,$00,$00,$00
        .byt $1e,$1e,$3f,$3f,$00,$00,$00,$00,$00,$00,$f8,$f8,$00,$00,$00,$00
        .byt $3c,$78,$78,$78,$00,$00,$00,$00,$03,$07,$07,$07,$00,$00,$00,$00
        .byt $c0,$80,$83,$83,$00,$00,$00,$00,$03,$0f,$fe,$f8,$00,$00,$00,$00
        .byt $80,$00,$00,$00,$00,$00,$00,$00,$1e,$1e,$3c,$3c,$00,$00,$00,$00
        .byt $0f,$0e,$0e,$0e,$00,$00,$00,$00,$3c,$38,$38,$38,$00,$00,$00,$00
        .byt $38,$38,$3f,$0f,$00,$00,$00,$00,$00,$00,$83,$83,$00,$00,$00,$00
        .byt $00,$00,$01,$01,$03,$03,$06,$06,$c0,$c0,$80,$80,$00,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

        .byt $00,$00,$00,$00,$00,$00,$00,$00,$30,$30,$60,$60,$ff,$00,$00,$00    ; line 7
        .byt $03,$03,$06,$06,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $30,$30,$60,$60,$ff,$00,$00,$00,$1f,$1f,$1f,$1e,$ff,$00,$00,$00
        .byt $c0,$80,$00,$00,$ff,$00,$00,$00,$30,$30,$60,$60,$ff,$00,$00,$00
        .byt $03,$03,$06,$06,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $30,$30,$60,$60,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$00,$00,$00,$00,$ff,$00,$00,$00
        .byt $00,$00,$00,$00,$ff,$00,$00,$00,$0c,$0c,$18,$18,$f0,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
        .byt $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00


_lockScreen
l155e   lda #>bitmapRAM0
        tax
        sta zpFadeInDstPtr+1
        lda #$00
        tay
        sta zpFadeInDstPtr
_lockScreenL1
        sta (zpFadeInDstPtr),y  ; clear destination byte
        iny
        bne _lockScreenL1
        inc zpFadeInDstPtr+1
        dex
        bne _lockScreenL1
        jsr _fadeInOriginLogo
_lockScreenL2
l1575
        jmp _lockScreenL2


_fadeInOriginLogo
l1578   ldx #$ff
        stx zpFadeInRnd         ; initialize 16 bit random value
        stx zpFadeInRnd+1
        inx
        stx zpFadeInCtr         ; initialize 16 bit random counter
        stx zpFadeInCtr+1
_fadeInL1
        lsr zpFadeInRnd+1       ; rotate random bit into carry
        ror zpFadeInRnd
        bcc _fadeInJ1           ; random bit == 0? ->
        lda zpFadeInRnd+1
        eor #$b4                ; randomize high byte of random value
        sta zpFadeInRnd+1
_fadeInJ1
        lda zpFadeInRnd         ; low byte of random value: bitmap ptr lb
        sta zpFadeInDstPtr      ; dst ptr lb
        sta zpFadeInSrcPtr      ; src ptr lb
        lda zpFadeInRnd+1       ; high byte of random value:
        and #$1f                ; constraint to bitmapRAM area
        cmp #$06                ; above logo area in bitmap?
        bcc _fadeInCont         ; yes ->
        cmp #$11                ; below logo area in bitmap?
        bcs _fadeInCont         ; yes ->
        clc
        adc #>bitmapRAM0
        sta zpFadeInDstPtr+1    ; dst ptr hb
        adc #>(bitmapRAM1-bitmapRAM0)
        sta zpFadeInSrcPtr+1    ; src ptr hb
        lda zpFadeInRnd+1
        and #$e0                ; high three bits of random value
        rol
        rol                     ; shift into lower nibble
        rol                     ; resulting value: [0,1,2,3,4,5,6,7]
        rol
        tay                     ; counter: number of times to rotate bit mask
        sec                     ; prepare a single '1' bit for a bit mask
        lda #$00                ; empty mask
_fadeInL2
        ror                     ; rotate '1' into/within mask
        dey                     ; repeat n times
        bpl _fadeInL2
        iny                     ; y = 0
        tax                     ; x = mask
        and (zpFadeInSrcPtr),y  ; get masked bit from source byte (bitmapRAM1)
        beq _fadeInCont         ; if empty ->
        sta zpFadeInBit
        txa
        eor #$ff                ; invert mask
        and (zpFadeInDstPtr),y  ; clear masked bit from dest byte (bitmapRAM0)
        ora zpFadeInBit         ; set the source bit
        sta (zpFadeInDstPtr),y  ; write back to dest byte
_fadeInCont
        inc zpFadeInCtr         ; inc counter lb
        bne _fadeInL1
        inc zpFadeInCtr+1       ; inc counter hb, repeat $ffff times
        bne _fadeInL1
        lda bitmapRAM1
        sta bitmapRAM0
        rts

        .byt $ce                ; extra byte?
